---
layout: app
title: Home - Akash Pillai
canonical: https://akash.dev/
description: I'm a CS student and musician currently studying at <br> the University of Illinois at Chicago.

media-buttons:
    Github:
        icon: <path fill="currentColor" d="M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z" />
        link: https://github.com/FestiveAkp
    CodeSandbox:
        icon: <path fill="currentColor" d="M8,3A2,2 0 0,0 6,5V9A2,2 0 0,1 4,11H3V13H4A2,2 0 0,1 6,15V19A2,2 0 0,0 8,21H10V19H8V14A2,2 0 0,0 6,12A2,2 0 0,0 8,10V5H10V3M16,3A2,2 0 0,1 18,5V9A2,2 0 0,0 20,11H21V13H20A2,2 0 0,0 18,15V19A2,2 0 0,1 16,21H14V19H16V14A2,2 0 0,1 18,12A2,2 0 0,1 16,10V5H14V3H16Z" />
        link: https://codesandbox.io/u/FestiveAkp
    LinkedIn:
        icon: <path fill="currentColor" d="M19 3A2 2 0 0 1 21 5V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V5A2 2 0 0 1 5 3H19M18.5 18.5V13.2A3.26 3.26 0 0 0 15.24 9.94C14.39 9.94 13.4 10.46 12.92 11.24V10.13H10.13V18.5H12.92V13.57C12.92 12.8 13.54 12.17 14.31 12.17A1.4 1.4 0 0 1 15.71 13.57V18.5H18.5M6.88 8.56A1.68 1.68 0 0 0 8.56 6.88C8.56 5.95 7.81 5.19 6.88 5.19A1.69 1.69 0 0 0 5.19 6.88C5.19 7.81 5.95 8.56 6.88 8.56M8.27 18.5V10.13H5.5V18.5H8.27Z" />
        link: 'https://linkedin.com/in/akash-pillai-143b2b1b4'
    Email Me:
        icon: <path fill="currentColor" d="M13 17H17V14L22 18.5L17 23V20H13V17M20 4H4A2 2 0 0 0 2 6V18A2 2 0 0 0 4 20H11V18H4V8L12 13L20 8V14H22V6A2 2 0 0 0 20 4M12 11L4 6H20Z" />
        link: mailto:apilla20@uic.edu
---
<main id="main" class="flex items-center h-full justify-center sm:justify-start sm:pl-24 xl:pl-64 select-none z-0">
    <section class="text-center sm:text-left z-20 pointer-events-none">
        <h1 class="text-5xl sm:text-6xl">Akash Pillai</h1>
        <h2 class="text-sm text-gray-400 sm:text-base">{{{description}}}</h2>

        <a class="btn mt-10 pr-3 inline-flex items-center pointer-events-auto" href="/projects/">
            <span class="font-semibold tracking-wide">Check out my projects</span>
            <svg style="width:1.25rem; height:1.25rem;" class="ml-2" viewBox="0 0 24 24">
                <path fill="currentColor" d="M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z" />
            </svg>
        </a>

        <div class="flex justify-between mt-20">
            {{#each media-buttons}}
                <a class="btn btn-media pointer-events-auto" href="{{this.link}}" title="{{@key}}" target="_blank" rel="noopener noreferrer">
                    <svg style="width:1.5rem; height:1.5rem;" viewBox="0 0 24 24">{{{this.icon}}}</svg>
                </a>
            {{/each}}
        </div>
    </section>
    <canvas id="matter-js" class="absolute top-0 left-0 z-10"></canvas>
</main>

<script src="https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.14.2/matter.min.js" integrity="sha512-pi0tSRZdlNRZeANPwdAIHRAYg6gZZV6QlAiyHXn5TYqLzBKE9jlttO/QgYLMhISD6oNv2kPsVelx+n5nw0FqKA==" crossorigin="anonymous"></script>
<script>
    const Engine          = Matter.Engine;
    const Render          = Matter.Render;
    const Runner          = Matter.Runner;
    const World           = Matter.World;
    const Composite       = Matter.Composite;
    const Composites      = Matter.Composites;
    const Common          = Matter.Common;
    const Body            = Matter.Body;
    const Bodies          = Matter.Bodies;
    const MouseConstraint = Matter.MouseConstraint;
    const Mouse           = Matter.Mouse;

    let topWall;
    let leftWall;
    let bottomWall;
    let rightWall;

    // Create walls that border the window
    const createWalls = world => {
        const wallWidth = 100;
        const wallWidthOffset = (wallWidth / 2) - 3;
        const wallOptions = {
            isStatic: true,
            restitution: 0.8,
            friction: 0,
            render: {
                visible: true
            }
        };

        topWall = Bodies.rectangle(window.innerWidth / 2, 0 - wallWidthOffset, window.innerWidth, wallWidth, wallOptions);
        leftWall = Bodies.rectangle(0 - wallWidthOffset, window.innerHeight / 2, wallWidth, window.innerHeight, wallOptions);
        bottomWall = Bodies.rectangle(window.innerWidth / 2, window.innerHeight + wallWidthOffset, window.innerWidth, wallWidth, wallOptions);
        rightWall = Bodies.rectangle(window.innerWidth + wallWidthOffset, window.innerHeight / 2, wallWidth, window.innerHeight, wallOptions);

        World.add(world, [topWall, leftWall, bottomWall, rightWall]);
    }

    // Remove walls
    const removeWalls = world => {
        World.remove(engine.world, topWall);
        World.remove(engine.world, leftWall);
        World.remove(engine.world, bottomWall);
        World.remove(engine.world, rightWall);
    }

    // Create Engine
    const engine = Engine.create();
    engine.world.gravity.scale = 0;

    // Create renderer
    const render = Render.create({
        canvas: document.querySelector('#matter-js'),
        engine: engine,
        options: {
            width: window.innerWidth,
            height: window.innerHeight,
            background: 'transparent',
            wireframes: false
        }
    });

    Render.setPixelRatio(render, 'auto');
    Render.run(render);

    // Add bodies
    const stack = Composites.stack(150, 100, 8, 5, 200, 100, (x, y) => {
        const newBody = Bodies.rectangle(x, y, Common.random(25, 50), Common.random(25, 50), { chamfer: 0.4 });
        newBody.friction = 0.01;
        newBody.frictionAir = 0.001;
        newBody.restitution = 0.5;
        Body.setMass(newBody, 3);
        return newBody;
    });

    World.add(engine.world, stack);

    // Create walls
    createWalls(engine.world);

    // Register mouse
    const mouse = Mouse.create(render.canvas);
    const mouseConstraint = MouseConstraint.create(engine, {
        mouse,
        constraint: {
            stiffness: 0.2,
            render: {
                visible: false
            }
        }
    });

    World.add(engine.world, mouseConstraint);
    render.mouse = mouse;

    mouse.element.removeEventListener('mousewheel', mouse.mousewheel);
    mouse.element.removeEventListener('DOMMouseScroll', mouse.mousewheel);


    // Scatter all bodies to start out
    Composite.allBodies(stack).forEach(body => {
        const initialPushForce = 0.09;
        Body.applyForce(body, body.position, {
            x: Common.random(-initialPushForce, initialPushForce),
            y: Common.random(-initialPushForce, initialPushForce)
        });
        Body.setAngularVelocity(body, 0.01);
    });

    // Run the simulation
    Engine.run(engine);

    // Intermittently push a random body
    setInterval(() => {
        const pushBodyID = Math.floor(Common.random(1, 40));
        const pushBody = Composite.get(stack, pushBodyID, 'body')
        const intermittentPushForce = 0.01;
        if (pushBody) {
            Body.applyForce(pushBody, pushBody.position, {
                x: Common.random(-intermittentPushForce, intermittentPushForce),
                y: Common.random(-intermittentPushForce, intermittentPushForce)
            });
            Body.setAngularVelocity(pushBody, 0.01);
        }
    }, 1000)

    // Resize simulation if the window size changes
    window.addEventListener('resize', () => {
        render.canvas.width = window.innerWidth;
        render.canvas.style.width = window.innerWidth + 'px';
        render.canvas.height = window.innerHeight;
        render.canvas.style.height = window.innerHeight + 'px';

        removeWalls(engine.world);
        createWalls(engine.world);
    });
</script>
